//
//  PokedexPresenter.swift
//  Pokedex
//
//  Created Michel Torres Alonso on 11/06/22.
//  Copyright © 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PokedexPresenter: PokedexPresenterProtocol {
    
    var pokemons: [Pokemon] = []
    var pokemonsFiltered: [Pokemon] = []

    weak private var view: PokedexViewProtocol?
    var interactor: PokedexInteractorProtocol?
    private let router: PokedexWireframeProtocol

    init(interface: PokedexViewProtocol, interactor: PokedexInteractorProtocol?, router: PokedexWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getPokemons() {
        interactor?.getPokemons(offset: pokemons.count, limit: 20)
    }
    
    func showPokemons(pokemons: [Pokemon]) {
        self.pokemons.append(contentsOf: pokemons)
        self.pokemonsFiltered.removeAll()
        self.pokemonsFiltered.append(contentsOf: self.pokemons)
        view?.showPokemons()
    }
    
    func searchPokemon(text: String) {
        if text.isEmpty {
            self.pokemonsFiltered.removeAll()
            self.pokemonsFiltered.append(contentsOf: self.pokemons)
        } else {
            self.pokemonsFiltered = self.pokemons.filter({ pokemon in
                pokemon.name.lowercased().contains(text.lowercased())
            })
        }
        view?.showPokemons()
    }
    
    func goToPokemonDetail(index: Int) {
        let id = Int(pokemonsFiltered[index].url.split(separator: "/").last ?? "0") ?? 0
        router.goToPokemonDetail(id: id)
    }

}
